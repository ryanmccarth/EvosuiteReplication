/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 22 18:39:43 GMT 2020
 */

package bierse.view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import bierse.view.RunningMessagePanel;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import javax.swing.DebugGraphics;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RunningMessagePanel_ESTest extends RunningMessagePanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", (-1556));
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      ActionEvent actionEvent0 = new ActionEvent(styledEditorKit_UnderlineAction0, 2349, "", (-1421));
      runningMessagePanel0.actionPerformed(actionEvent0);
      runningMessagePanel0.actionPerformed(actionEvent0);
      assertEquals(0, runningMessagePanel0.getStringWidth());
      assertEquals(27, runningMessagePanel0.getStringHeight());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("hSNPt-OX6C$!}D ", 0);
      int int0 = runningMessagePanel0.getStringWidth();
      assertEquals(191, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("0^>/-E`:#K0DM", (-443));
      // Undeclared exception!
      try { 
        runningMessagePanel0.setSpeed((-443));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid delay: -443
         //
         verifyException("javax.swing.Timer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", (-1));
      // Undeclared exception!
      try { 
        runningMessagePanel0.setMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 1);
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      // Undeclared exception!
      try { 
        runningMessagePanel0.paintComponent(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = null;
      try {
        runningMessagePanel0 = new RunningMessagePanel((String) null, (-3321));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("L5]xy`ZwCV!m<3MmE", (-389));
      runningMessagePanel0.setSize((-389), (-389));
      ActionEvent actionEvent0 = new ActionEvent("L5]xy`ZwCV!m<3MmE", (-389), "L5]xy`ZwCV!m<3MmE", (-389), (-1173));
      runningMessagePanel0.actionPerformed(actionEvent0);
      assertEquals(204, runningMessagePanel0.getStringWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 1);
      RunningMessagePanel runningMessagePanel1 = new RunningMessagePanel(":K:S(Tt$wit~Uw1C", 0);
      assertEquals(203, runningMessagePanel1.getStringWidth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 0);
      int int0 = runningMessagePanel0.getStringHeight();
      assertEquals(27, int0);
      assertEquals(0, runningMessagePanel0.getStringWidth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 0);
      int int0 = runningMessagePanel0.getStringWidth();
      assertEquals(0, int0);
      assertEquals(27, runningMessagePanel0.getStringHeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 1);
      runningMessagePanel0.setMessage("uI^/p>nZ13qZkZ&R");
      assertEquals(192, runningMessagePanel0.getStringWidth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RunningMessagePanel runningMessagePanel0 = new RunningMessagePanel("", 1);
      runningMessagePanel0.setSpeed(1);
      assertEquals(27, runningMessagePanel0.getStringHeight());
      assertEquals(0, runningMessagePanel0.getStringWidth());
  }
}
