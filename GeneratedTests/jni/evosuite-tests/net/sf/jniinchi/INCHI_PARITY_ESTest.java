/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 24 19:53:35 GMT 2020
 */

package net.sf.jniinchi;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_PARITY;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class INCHI_PARITY_ESTest extends INCHI_PARITY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      INCHI_PARITY[] iNCHI_PARITYArray0 = INCHI_PARITY.values();
      assertEquals(5, iNCHI_PARITYArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.valueOf("NONE");
      assertEquals(INCHI_PARITY.NONE, iNCHI_PARITY0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.valueOf("ODD");
      assertEquals(1, iNCHI_PARITY0.getIndx());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      INCHI_PARITY.getValue(2659);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(4);
      assertEquals(INCHI_PARITY.UNDEFINED, iNCHI_PARITY0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(3);
      assertEquals(INCHI_PARITY.UNKNOWN, iNCHI_PARITY0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(1);
      assertEquals(INCHI_PARITY.ODD, iNCHI_PARITY0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(2);
      assertEquals(INCHI_PARITY.EVEN, iNCHI_PARITY0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(0);
      int int0 = iNCHI_PARITY0.getIndx();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.EVEN;
      int int0 = iNCHI_PARITY0.getIndx();
      assertEquals(2, int0);
  }
}
