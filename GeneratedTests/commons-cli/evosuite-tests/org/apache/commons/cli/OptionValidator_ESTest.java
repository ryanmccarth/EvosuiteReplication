/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 15:35:37 GMT 2020
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.OptionValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OptionValidator_ESTest extends OptionValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        OptionValidator.validateOption("'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '''
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OptionValidator.validateOption("@");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OptionValidator.validateOption("X");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OptionValidator.validateOption("");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        OptionValidator.validateOption("`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '`'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OptionValidator.validateOption("?");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OptionValidator.validateOption((String) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OptionValidator optionValidator0 = new OptionValidator();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      try { 
        OptionValidator.validateOption("Xr{<QpC#ZlBw");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'Xr{<QpC#ZlBw' contains an illegal character : '{'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }
}
