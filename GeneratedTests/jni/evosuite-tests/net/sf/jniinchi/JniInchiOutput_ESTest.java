/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 24 19:29:58 GMT 2020
 */

package net.sf.jniinchi;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_RET;
import net.sf.jniinchi.JniInchiOutput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JniInchiOutput_ESTest extends JniInchiOutput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, "#7>`5^m:&!EY_-j8", "Mif((0Gv,h", "#7>`5^m:&!EY_-j8", "#7>`5^m:&!EY_-j8");
      jniInchiOutput0.getReturnStatus();
      assertEquals("#7>`5^m:&!EY_-j8", jniInchiOutput0.getLog());
      assertEquals("#7>`5^m:&!EY_-j8", jniInchiOutput0.getMessage());
      assertEquals("Mif((0Gv,h", jniInchiOutput0.getAuxInfo());
      assertEquals("#7>`5^m:&!EY_-j8", jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.EOF;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "net.sf.jniinchi.JniInchiOutput", "", "BUSY", (String) null);
      jniInchiOutput0.getReturnStatus();
      assertEquals("", jniInchiOutput0.getAuxInfo());
      assertEquals("BUSY", jniInchiOutput0.getMessage());
      assertEquals("net.sf.jniinchi.JniInchiOutput", jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.FATAL;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "/", "/", "/", "/");
      String string0 = jniInchiOutput0.getMessage();
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, "$VALUES", "$VALUES", "", "");
      String string0 = jniInchiOutput0.getMessage();
      assertEquals("$VALUES", jniInchiOutput0.getAuxInfo());
      assertEquals("", string0);
      assertEquals("", jniInchiOutput0.getLog());
      assertEquals("$VALUES", jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(23, "r", "r", "r", "r");
      String string0 = jniInchiOutput0.getLog();
      assertEquals("r", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.UNKNOWN;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "EOF", "EOF", "EOF", "");
      String string0 = jniInchiOutput0.getLog();
      assertEquals("EOF", jniInchiOutput0.getMessage());
      assertEquals("EOF", jniInchiOutput0.getAuxInfo());
      assertEquals("", string0);
      assertEquals("EOF", jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(23, "r", "r", "r", "r");
      String string0 = jniInchiOutput0.getInchi();
      assertEquals("r", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.SKIP;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "", "", (String) null, (String) null);
      String string0 = jniInchiOutput0.getInchi();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(4, "InChI_Output: ", "InChI_Output: ", "InChI_Output: ", "InChI_Output: ");
      String string0 = jniInchiOutput0.getAuxInfo();
      assertEquals("InChI_Output: ", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput((-1), "", "", (String) null, "");
      String string0 = jniInchiOutput0.getAuxInfo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.ERROR;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, (String) null, (String) null, (String) null, (String) null);
      INCHI_RET iNCHI_RET1 = jniInchiOutput0.getReturnStatus();
      assertEquals(INCHI_RET.ERROR, iNCHI_RET1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.setRetStatus((INCHI_RET) null);
      assertNull(jniInchiOutput0.getLog());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.setMessage((String) null);
      assertNull(jniInchiOutput0.getMessage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.setLog((String) null);
      assertNull(jniInchiOutput0.getReturnStatus());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      String string0 = jniInchiOutput0.getAuxInfo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      String string0 = jniInchiOutput0.toString();
      assertEquals("InChI_Output: null/null/null/null/null", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.setInchi((String) null);
      assertNull(jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      String string0 = jniInchiOutput0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      String string0 = jniInchiOutput0.getInchi();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.getReturnStatus();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      jniInchiOutput0.setAuxInfo((String) null);
      assertNull(jniInchiOutput0.getInchi());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(2564, (String) null, (String) null, (String) null, (String) null);
      String string0 = jniInchiOutput0.getLog();
      assertNull(string0);
  }
}
