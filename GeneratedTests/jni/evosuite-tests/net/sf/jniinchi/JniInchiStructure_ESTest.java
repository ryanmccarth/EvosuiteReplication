/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 24 19:36:46 GMT 2020
 */

package net.sf.jniinchi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.jniinchi.INCHI_BOND_STEREO;
import net.sf.jniinchi.INCHI_BOND_TYPE;
import net.sf.jniinchi.INCHI_PARITY;
import net.sf.jniinchi.INCHI_STEREOTYPE;
import net.sf.jniinchi.JniInchiAtom;
import net.sf.jniinchi.JniInchiBond;
import net.sf.jniinchi.JniInchiStereo0D;
import net.sf.jniinchi.JniInchiStructure;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JniInchiStructure_ESTest extends JniInchiStructure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiStructure jniInchiStructure1 = new JniInchiStructure();
      jniInchiStructure0.setStructure(jniInchiStructure1);
      assertEquals(0, jniInchiStructure1.getNumStereo0D());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      jniInchiStructure0.addStereo0D((JniInchiStereo0D) null);
      int int0 = jniInchiStructure0.getStereo0DIndex((JniInchiStereo0D) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(8, 8, 8, "");
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.EVEN;
      JniInchiStereo0D jniInchiStereo0D0 = JniInchiStereo0D.createNewDoublebondStereo0D((JniInchiAtom) null, (JniInchiAtom) null, (JniInchiAtom) null, jniInchiAtom0, iNCHI_PARITY0);
      jniInchiStructure0.addStereo0D(jniInchiStereo0D0);
      JniInchiStereo0D jniInchiStereo0D1 = JniInchiStereo0D.createNewTetrahedralStereo0D((JniInchiAtom) null, jniInchiAtom0, (JniInchiAtom) null, (JniInchiAtom) null, jniInchiAtom0, iNCHI_PARITY0);
      JniInchiStereo0D jniInchiStereo0D2 = jniInchiStructure0.addStereo0D(jniInchiStereo0D1);
      int int0 = jniInchiStructure0.getStereo0DIndex(jniInchiStereo0D2);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.NONE;
      JniInchiStereo0D jniInchiStereo0D0 = JniInchiStereo0D.createNewTetrahedralStereo0D(jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, iNCHI_PARITY0);
      jniInchiStructure0.addStereo0D(jniInchiStereo0D0);
      JniInchiStereo0D jniInchiStereo0D1 = jniInchiStructure0.getStereo0D(0);
      assertEquals(INCHI_STEREOTYPE.TETRAHEDRAL, jniInchiStereo0D1.getStereoType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(8, 8, 8, "");
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.EVEN;
      JniInchiStereo0D jniInchiStereo0D0 = JniInchiStereo0D.createNewDoublebondStereo0D((JniInchiAtom) null, (JniInchiAtom) null, (JniInchiAtom) null, jniInchiAtom0, iNCHI_PARITY0);
      jniInchiStructure0.addStereo0D(jniInchiStereo0D0);
      int int0 = jniInchiStructure0.getNumStereo0D();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      int int0 = jniInchiStructure0.getNumAtoms();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiBond[] jniInchiBondArray0 = new JniInchiBond[5];
      jniInchiStructure0.addBonds(jniInchiBondArray0);
      jniInchiStructure0.getBond(0);
      assertEquals(5, jniInchiStructure0.getNumBonds());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(0.0, (-423.79268518), 0.0, "lZxW;");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.SINGLE;
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.SINGLE_2DOWN;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0, iNCHI_BOND_STEREO0);
      jniInchiStructure0.addBond(jniInchiBond0);
      JniInchiBond jniInchiBond1 = jniInchiStructure0.getBond(0);
      assertEquals(INCHI_BOND_STEREO.SINGLE_2DOWN, jniInchiBond1.getBondStereo());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      int int0 = jniInchiStructure0.getAtomIndex(jniInchiAtom0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      JniInchiAtom jniInchiAtom1 = new JniInchiAtom((-1764.3427), 1.0, 0.0, "y5");
      JniInchiAtom jniInchiAtom2 = jniInchiStructure0.addAtom(jniInchiAtom1);
      int int0 = jniInchiStructure0.getAtomIndex(jniInchiAtom2);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom[] jniInchiAtomArray0 = new JniInchiAtom[1];
      jniInchiStructure0.addAtoms(jniInchiAtomArray0);
      JniInchiAtom jniInchiAtom0 = jniInchiStructure0.getAtom(0);
      assertNull(jniInchiAtom0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(1.0, 1.0, 1.0, "&\"E]LcP`q");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(1.0, jniInchiAtom1.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom0.setImplicitTritium(8);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom1.getCharge());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom0.setImplicitTritium((-1));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0.0, jniInchiAtom1.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(0.0, 0.0, 1128.57741, "q8(r?");
      JniInchiAtom[] jniInchiAtomArray0 = new JniInchiAtom[9];
      jniInchiAtomArray0[0] = jniInchiAtom0;
      jniInchiStructure0.addAtoms(jniInchiAtomArray0);
      jniInchiAtom0.setImplicitProtium((-1217));
      jniInchiStructure0.getAtom(0);
      assertEquals(9, jniInchiStructure0.getNumAtoms());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("net.sf.jniinchi.JniInchiStructure");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom0.setImplicitH(0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0.0, jniInchiAtom1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom1.setImplicitH(7);
      JniInchiAtom jniInchiAtom2 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom2.getImplicitDeuterium());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom0.setImplicitDeuterium(5597);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0.0, jniInchiAtom1.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom0.setImplicitDeuterium((-1));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom1.getIsotopicMass());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom1.setCharge(589);
      JniInchiAtom jniInchiAtom2 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom2.getImplicitDeuterium());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      jniInchiStructure0.addStereo0D((JniInchiStereo0D) null);
      JniInchiStereo0D jniInchiStereo0D0 = jniInchiStructure0.getStereo0D(0);
      assertNull(jniInchiStereo0D0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiBond jniInchiBond0 = jniInchiStructure0.addBond((JniInchiBond) null);
      assertNull(jniInchiBond0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = jniInchiStructure0.addAtom((JniInchiAtom) null);
      assertNull(jniInchiAtom0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiAtom0.setIsotopicMassShift(95);
      jniInchiStructure0.addAtom(jniInchiAtom0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom1.getImplicitDeuterium());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-1.0), (-1.0), (-1.0), "");
      jniInchiAtom0.setIsotopicMass((-741));
      jniInchiStructure0.addAtom(jniInchiAtom0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertSame(jniInchiAtom1, jniInchiAtom0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(" // Parity:");
      jniInchiAtom0.setImplicitTritium(312);
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertSame(jniInchiAtom0, jniInchiAtom1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(0.0, 0.0, 22.590267772145, ":=kjYtj*");
      jniInchiAtom0.setImplicitTritium((-3209));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals(0, jniInchiAtom1.getCharge());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-1.0), (-1.0), (-1.0), "");
      jniInchiAtom0.setImplicitProtium(2);
      jniInchiStructure0.addAtom(jniInchiAtom0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.getAtom(0);
      assertEquals((-1.0), jniInchiAtom1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("E,zHb5r1TA6(;?6");
      jniInchiAtom0.setImplicitProtium((-2457));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals((-2457), jniInchiAtom1.getImplicitProtium());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(891.82414472, 0.0, 0.0, "k");
      jniInchiAtom0.setImplicitH(0);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals(0, jniInchiAtom1.getImplicitH());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("(<-GgW'>`jYp%eh|1u");
      jniInchiAtom0.setImplicitH(3158);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals(0, jniInchiAtom1.getImplicitProtium());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-1.0), (-1.0), (-1.0), "");
      jniInchiAtom0.setImplicitDeuterium(2);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals("", jniInchiAtom1.getElementType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("UNDEFINED");
      jniInchiAtom0.setImplicitDeuterium((-603));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals(0, jniInchiAtom1.getImplicitProtium());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiAtom0.setCharge(589);
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertSame(jniInchiAtom1, jniInchiAtom0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      jniInchiAtom0.setCharge((-1));
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      assertEquals(0.0, jniInchiAtom1.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.setStructure((JniInchiStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.jniinchi.JniInchiStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getStereo0D(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getBond(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getAtom(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.addBonds((JniInchiBond[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.jniinchi.JniInchiStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.addAtoms((JniInchiAtom[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.jniinchi.JniInchiStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, (-1178), (-667));
      jniInchiStructure0.addBond(jniInchiBond0);
      int int0 = jniInchiStructure0.getNumBonds();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("");
      JniInchiAtom jniInchiAtom1 = jniInchiStructure0.addAtom(jniInchiAtom0);
      jniInchiAtom1.setCharge((-1));
      JniInchiAtom jniInchiAtom2 = jniInchiStructure0.getAtom(0);
      assertEquals(0, jniInchiAtom2.getImplicitProtium());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("l");
      int int0 = jniInchiStructure0.getAtomIndex(jniInchiAtom0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      int int0 = jniInchiStructure0.getNumAtoms();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      int int0 = jniInchiStructure0.getNumBonds();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("{l@mq|6*KRUP)+");
      INCHI_STEREOTYPE iNCHI_STEREOTYPE0 = INCHI_STEREOTYPE.TETRAHEDRAL;
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.UNDEFINED;
      JniInchiStereo0D jniInchiStereo0D0 = new JniInchiStereo0D(jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, jniInchiAtom0, iNCHI_STEREOTYPE0, iNCHI_PARITY0);
      int int0 = jniInchiStructure0.getStereo0DIndex(jniInchiStereo0D0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      int int0 = jniInchiStructure0.getNumStereo0D();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getBond((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getAtom((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JniInchiStructure jniInchiStructure0 = new JniInchiStructure();
      // Undeclared exception!
      try { 
        jniInchiStructure0.getStereo0D((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
