/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 22 19:38:58 GMT 2020
 */

package com.mytdev.resources4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mytdev.resources4j.ResourcesInjector;
import com.mytdev.resources4j.impl.MapResourcesBunble;
import com.mytdev.resources4j.interfaces.Resources;
import com.mytdev.resources4j.interfaces.ResourcesBundle;
import java.util.HashMap;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourcesInjector_ESTest extends ResourcesInjector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      ResourcesInjector resourcesInjector0 = null;
      try {
        resourcesInjector0 = new ResourcesInjector((ResourcesBundle) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // resources bundle is null
         //
         verifyException("com.mytdev.resources4j.ResourcesInjector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResourcesInjector resourcesInjector0 = null;
      try {
        resourcesInjector0 = new ResourcesInjector((ResourcesBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // resources bundle is null
         //
         verifyException("com.mytdev.resources4j.ResourcesInjector", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      ResourcesInjector resourcesInjector1 = resourcesInjector0.setResourcesBundle(mapResourcesBunble0);
      assertSame(resourcesInjector1, resourcesInjector0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      Locale locale0 = Locale.CANADA_FRENCH;
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0, locale0);
      ResourcesInjector resourcesInjector1 = resourcesInjector0.setLocale(locale0);
      assertSame(resourcesInjector0, resourcesInjector1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      Locale locale0 = Locale.JAPANESE;
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0, locale0);
      // Undeclared exception!
      try { 
        resourcesInjector0.setResourcesBundle((ResourcesBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // resources bundle is null
         //
         verifyException("com.mytdev.resources4j.ResourcesInjector", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      ResourcesInjector resourcesInjector1 = resourcesInjector0.setLocale((Locale) null);
      assertSame(resourcesInjector1, resourcesInjector0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      resourcesInjector0.process(resourcesInjector0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      Locale locale0 = resourcesInjector0.getLocale();
      assertEquals("en", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      ResourcesBundle resourcesBundle0 = resourcesInjector0.getResourcesBundle();
      assertSame(mapResourcesBunble0, resourcesBundle0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HashMap<Locale, Resources> hashMap0 = new HashMap<Locale, Resources>();
      MapResourcesBunble mapResourcesBunble0 = new MapResourcesBunble(hashMap0);
      ResourcesInjector resourcesInjector0 = new ResourcesInjector(mapResourcesBunble0);
      // Undeclared exception!
      try { 
        resourcesInjector0.process((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mytdev.resources4j.ResourcesInjector", e);
      }
  }
}
