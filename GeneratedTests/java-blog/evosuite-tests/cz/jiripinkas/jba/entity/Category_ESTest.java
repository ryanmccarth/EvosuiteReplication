/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 22:10:21 GMT 2020
 */

package cz.jiripinkas.jba.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import cz.jiripinkas.jba.entity.Blog;
import cz.jiripinkas.jba.entity.Category;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Category_ESTest extends Category_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Category category0 = new Category();
      category0.setShortName("E");
      String string0 = category0.getShortName();
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Category category0 = new Category();
      category0.setShortName("");
      String string0 = category0.getShortName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Category category0 = new Category();
      category0.setName("2");
      String string0 = category0.getName();
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Category category0 = new Category();
      category0.setName("");
      String string0 = category0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Category category0 = new Category();
      category0.setId(2011);
      int int0 = category0.getId();
      assertEquals(2011, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Category category0 = new Category();
      category0.setId((-7159));
      int int0 = category0.getId();
      assertEquals((-7159), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Category category0 = new Category();
      LinkedList<Blog> linkedList0 = new LinkedList<Blog>();
      Blog blog0 = new Blog();
      linkedList0.add(blog0);
      category0.setBlogs(linkedList0);
      List<Blog> list0 = category0.getBlogs();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Category category0 = new Category();
      category0.setBlogCount(1);
      int int0 = category0.getBlogCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Category category0 = new Category();
      category0.setBlogCount((-1));
      int int0 = category0.getBlogCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Category category0 = new Category();
      String string0 = category0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Category category0 = new Category();
      int int0 = category0.getBlogCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Category category0 = new Category();
      String string0 = category0.getShortName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Category category0 = new Category();
      LinkedList<Blog> linkedList0 = new LinkedList<Blog>();
      category0.setBlogs(linkedList0);
      List<Blog> list0 = category0.getBlogs();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Category category0 = new Category();
      int int0 = category0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Category category0 = new Category();
      List<Blog> list0 = category0.getBlogs();
      assertNull(list0);
  }
}
