/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 22:54:11 GMT 2020
 */

package com.sivalabs.jblogger.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sivalabs.jblogger.utils.CommonUtils;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommonUtils_ESTest extends CommonUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getYesterDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getWeekStartDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getWeekEndDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getStartOfDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getMonthStartDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getMonthEndDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        CommonUtils.getEndOfDay((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getMonthStartDay(localDateTime0);
      assertNotSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getEndOfDay(localDateTime0);
      assertFalse(localDateTime1.equals((Object)localDateTime0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getYesterDay(localDateTime0);
      assertNotSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getWeekStartDay(localDateTime0);
      assertNotSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getWeekEndDay(localDateTime0);
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getStartOfDay(localDateTime0);
      assertNotSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommonUtils commonUtils0 = new CommonUtils();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryOldDate();
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocalDateTime localDateTime0 = CommonUtils.getDummyVeryNewDate();
      LocalDateTime localDateTime1 = CommonUtils.getMonthEndDay(localDateTime0);
      assertSame(localDateTime1, localDateTime0);
  }
}
