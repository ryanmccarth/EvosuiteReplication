/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 22:52:25 GMT 2020
 */

package com.sivalabs.jblogger.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sivalabs.jblogger.domain.BlogOverview;
import com.sivalabs.jblogger.entities.PageView;
import com.sivalabs.jblogger.entities.Post;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BlogOverview_ESTest extends BlogOverview_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setAlltimeViewCount((-1L));
      blogOverview0.hashCode();
      assertEquals((-1L), blogOverview0.getAlltimeViewCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setAlltimeViewCount(1249L);
      blogOverview0.hashCode();
      assertEquals(1249L, blogOverview0.getAlltimeViewCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisMonthViewCount((-442L));
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount((-1L));
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount(425L);
      blogOverview0.hashCode();
      assertEquals(425L, blogOverview0.getThisWeekViewCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setYesterdayViewCount((-2524L));
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setTodayViewCount((-1243L));
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setCommentsCount((-1212L));
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setPostsCount((-3321L));
      blogOverview0.hashCode();
      assertEquals((-3321L), blogOverview0.getPostsCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      BlogOverview blogOverview1 = new BlogOverview();
      blogOverview0.setAlltimeViewCount((-2034L));
      boolean boolean0 = blogOverview1.equals(blogOverview0);
      assertEquals((-2034L), blogOverview0.getAlltimeViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      BlogOverview blogOverview1 = new BlogOverview();
      blogOverview1.setThisMonthViewCount((-1621L));
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1621L), blogOverview1.getThisMonthViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount((-1L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1L), blogOverview0.getThisWeekViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      BlogOverview blogOverview1 = new BlogOverview();
      blogOverview1.setYesterdayViewCount(2550L);
      boolean boolean0 = blogOverview1.equals(blogOverview0);
      assertEquals(2550L, blogOverview1.getYesterdayViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setTodayViewCount(1L);
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals(1L, blogOverview0.getTodayViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setCommentsCount(1867L);
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals(1867L, blogOverview0.getCommentsCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setPostsCount(1L);
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals(1L, blogOverview0.getPostsCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setYesterdayViewCount(46L);
      long long0 = blogOverview0.getYesterdayViewCount();
      assertEquals(46L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setYesterdayViewCount((-1L));
      long long0 = blogOverview0.getYesterdayViewCount();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setTodayViewCount(1L);
      long long0 = blogOverview0.getTodayViewCount();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setTodayViewCount((-455L));
      long long0 = blogOverview0.getTodayViewCount();
      assertEquals((-455L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount(1877L);
      long long0 = blogOverview0.getThisWeekViewCount();
      assertEquals(1877L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount((-385L));
      long long0 = blogOverview0.getThisWeekViewCount();
      assertEquals((-385L), long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisMonthViewCount((-2684L));
      long long0 = blogOverview0.getThisMonthViewCount();
      assertEquals((-2684L), long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setPostsCount(2631L);
      long long0 = blogOverview0.getPostsCount();
      assertEquals(2631L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setPostsCount((-3321L));
      long long0 = blogOverview0.getPostsCount();
      assertEquals((-3321L), long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      blogOverview0.setPageViews(linkedList0);
      List<PageView> list0 = blogOverview0.getPageViews();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      PageView pageView0 = new PageView();
      linkedList0.add(pageView0);
      blogOverview0.setPageViews(linkedList0);
      List<PageView> list0 = blogOverview0.getPageViews();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setCommentsCount(3235L);
      long long0 = blogOverview0.getCommentsCount();
      assertEquals(3235L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setCommentsCount((-1212L));
      long long0 = blogOverview0.getCommentsCount();
      assertEquals((-1212L), long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setAlltimeViewCount(196L);
      long long0 = blogOverview0.getAlltimeViewCount();
      assertEquals(196L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setAlltimeViewCount((-118L));
      long long0 = blogOverview0.getAlltimeViewCount();
      assertEquals((-118L), long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      boolean boolean0 = blogOverview0.canEqual(blogOverview0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      Long long0 = new Long((-1396L));
      boolean boolean0 = blogOverview0.canEqual(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      linkedList0.push((PageView) null);
      blogOverview0.setPageViews(linkedList0);
      // Undeclared exception!
      try { 
        blogOverview0.getPostViewCountMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sivalabs.jblogger.domain.BlogOverview", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getPostsCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getTodayViewCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      List<PageView> list0 = blogOverview0.getPageViews();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getThisWeekViewCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getThisMonthViewCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getAlltimeViewCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getCommentsCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      long long0 = blogOverview0.getYesterdayViewCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      PageView pageView0 = new PageView();
      linkedList0.offerFirst(pageView0);
      linkedList0.add(pageView0);
      blogOverview0.setPageViews(linkedList0);
      Map<Post, Long> map0 = blogOverview0.getPostViewCountMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      Map<Post, Long> map0 = blogOverview0.getPostViewCountMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      blogOverview0.setPageViews(linkedList0);
      BlogOverview blogOverview1 = new BlogOverview();
      assertFalse(blogOverview1.equals((Object)blogOverview0));
      
      blogOverview1.setPageViews(linkedList0);
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertTrue(blogOverview1.equals((Object)blogOverview0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      BlogOverview blogOverview1 = new BlogOverview();
      assertTrue(blogOverview1.equals((Object)blogOverview0));
      
      blogOverview1.setPageViews(linkedList0);
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertFalse(blogOverview1.equals((Object)blogOverview0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      blogOverview0.setPageViews(linkedList0);
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      BlogOverview blogOverview1 = new BlogOverview();
      blogOverview0.setAlltimeViewCount((-2034L));
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-2034L), blogOverview0.getAlltimeViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisMonthViewCount((-1621L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1621L), blogOverview0.getThisMonthViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setYesterdayViewCount((-1621L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1621L), blogOverview0.getYesterdayViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setTodayViewCount((-1621L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1621L), blogOverview0.getTodayViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setCommentsCount((-633L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-633L), blogOverview0.getCommentsCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setPostsCount((-1L));
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals((-1L), blogOverview0.getPostsCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      PageView pageView0 = new PageView();
      boolean boolean0 = blogOverview0.equals(pageView0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisMonthViewCount(1L);
      long long0 = blogOverview0.getThisMonthViewCount();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      String string0 = blogOverview0.toString();
      assertEquals("BlogOverview(postsCount=0, commentsCount=0, todayViewCount=0, yesterdayViewCount=0, thisWeekViewCount=0, thisMonthViewCount=0, alltimeViewCount=0, pageViews=null)", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      blogOverview0.setThisWeekViewCount(1L);
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertEquals(1L, blogOverview0.getThisWeekViewCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      LinkedList<PageView> linkedList0 = new LinkedList<PageView>();
      blogOverview0.setPageViews(linkedList0);
      blogOverview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BlogOverview blogOverview0 = new BlogOverview();
      BlogOverview blogOverview1 = new BlogOverview();
      boolean boolean0 = blogOverview0.equals(blogOverview1);
      assertTrue(boolean0);
  }
}
