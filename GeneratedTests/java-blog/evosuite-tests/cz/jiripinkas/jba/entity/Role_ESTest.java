/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 22:15:08 GMT 2020
 */

package cz.jiripinkas.jba.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import cz.jiripinkas.jba.entity.Role;
import cz.jiripinkas.jba.entity.User;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Role_ESTest extends Role_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Role role0 = new Role();
      LinkedList<User> linkedList0 = new LinkedList<User>();
      role0.setUsers(linkedList0);
      List<User> list0 = role0.getUsers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Role role0 = new Role();
      LinkedList<User> linkedList0 = new LinkedList<User>();
      User user0 = new User();
      linkedList0.add(user0);
      role0.setUsers(linkedList0);
      List<User> list0 = role0.getUsers();
      assertTrue(list0.contains(user0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Role role0 = new Role();
      role0.setName("cz.jiripinkas.jba.entity.Role");
      String string0 = role0.getName();
      assertEquals("cz.jiripinkas.jba.entity.Role", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Role role0 = new Role();
      role0.setName("");
      String string0 = role0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Role role0 = new Role();
      Integer integer0 = new Integer(5658);
      role0.setId(integer0);
      Integer integer1 = role0.getId();
      assertEquals(5658, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Role role0 = new Role();
      Integer integer0 = new Integer((-3696));
      role0.setId(integer0);
      Integer integer1 = role0.getId();
      assertEquals((-3696), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Role role0 = new Role();
      Integer integer0 = role0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Role role0 = new Role();
      String string0 = role0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Role role0 = new Role();
      Integer integer0 = new Integer(0);
      role0.setId(integer0);
      Integer integer1 = role0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Role role0 = new Role();
      List<User> list0 = role0.getUsers();
      assertNull(list0);
  }
}
