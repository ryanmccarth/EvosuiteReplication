/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 23:00:23 GMT 2020
 */

package com.sivalabs.jblogger.entities;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sivalabs.jblogger.entities.Role;
import com.sivalabs.jblogger.entities.User;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      boolean boolean0 = user0.equals(user0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      user0.setRoles((List<Role>) null);
      List<Role> list0 = user0.getRoles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      LinkedList<Role> linkedList0 = new LinkedList<Role>();
      Role role0 = new Role();
      linkedList0.add(role0);
      user0.setRoles(linkedList0);
      List<Role> list0 = user0.getRoles();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("@t");
      String string0 = user0.getPassword();
      assertEquals("@t", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      String string0 = user0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setName("|$@6");
      String string0 = user0.getName();
      assertEquals("|$@6", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      user0.setName("");
      String string0 = user0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(3367);
      user0.setId(integer0);
      Integer integer1 = user0.getId();
      assertEquals(3367, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(0);
      user0.setId(integer0);
      Integer integer1 = user0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer((-458));
      user0.setId(integer0);
      Integer integer1 = user0.getId();
      assertEquals((-458), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer((-4204));
      user0.setId(integer0);
      Integer integer1 = user0.getId();
      assertEquals((-4204), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("_j1Z|_:PV-Us9Nz");
      String string0 = user0.getEmail();
      assertEquals("_j1Z|_:PV-Us9Nz", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      String string0 = user0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = user0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      List<Role> list0 = user0.getRoles();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      LinkedList<Role> linkedList0 = new LinkedList<Role>();
      Role role0 = new Role();
      linkedList0.add(role0);
      user0.setRoles(linkedList0);
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user0.setRoles((List<Role>) null);
      assertFalse(user0.equals((Object)user1));
      
      user1.setRoles((List<Role>) null);
      boolean boolean0 = user0.equals(user1);
      assertTrue(user0.equals((Object)user1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user0.setRoles((List<Role>) null);
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setPassword("");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      User user1 = new User();
      boolean boolean0 = user1.equals(user0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("_j1Z|_:PV-Us9Nz");
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setEmail("_j1Z|_:PV-Us9Nz");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user1.setEmail("User(id=null, name=null, email=null, password=null, roles=[])");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("Jydbm\",+o]");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user0.setName("");
      assertFalse(user0.equals((Object)user1));
      
      user1.setName("");
      boolean boolean0 = user0.equals(user1);
      assertTrue(user0.equals((Object)user1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user1.setName("");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      user0.setName("");
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(1);
      user0.setId(integer0);
      User user1 = new User();
      assertFalse(user1.equals((Object)user0));
      
      user1.setId(integer0);
      boolean boolean0 = user0.equals(user1);
      assertTrue(user1.equals((Object)user0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      assertTrue(user1.equals((Object)user0));
      
      Integer integer0 = new Integer((-7));
      user1.setId(integer0);
      boolean boolean0 = user0.equals(user1);
      assertFalse(user1.equals((Object)user0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(1);
      user0.setId(integer0);
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      User user0 = new User();
      Object object0 = new Object();
      boolean boolean0 = user0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      User user1 = new User();
      boolean boolean0 = user0.equals(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      User user0 = new User();
      user0.setRoles((List<Role>) null);
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(1);
      user0.setId(integer0);
      user0.hashCode();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.toString();
      assertEquals("User(id=null, name=null, email=null, password=null, roles=[])", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User();
      user0.setName("");
      user0.hashCode();
  }
}
