/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 26 23:17:36 GMT 2020
 */

package property.maven.plugin;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import property.maven.plugin.Check;
import property.maven.plugin.CheckBlock;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckBlock_ESTest extends CheckBlock_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      checkBlock0.setFileLocation("x*p0");
      String string0 = checkBlock0.getFileLocation();
      assertEquals("x*p0", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      checkBlock0.setFileLocation("");
      String string0 = checkBlock0.getFileLocation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      List list0 = checkBlock0.getChecks();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      Check check0 = new Check();
      checkBlock0.removeCheck(check0);
      checkBlock0.addCheck(check0);
      assertNull(checkBlock0.getFileLocation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      String string0 = checkBlock0.getFileLocation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      checkBlock0.setChecks(linkedList0);
      List list0 = checkBlock0.getChecks();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CheckBlock checkBlock0 = new CheckBlock();
      Check check0 = new Check();
      checkBlock0.addCheck(check0);
      List list0 = checkBlock0.getChecks();
      assertFalse(list0.isEmpty());
  }
}
