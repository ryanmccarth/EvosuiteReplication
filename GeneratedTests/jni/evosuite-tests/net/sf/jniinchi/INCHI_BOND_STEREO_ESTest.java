/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 24 19:50:43 GMT 2020
 */

package net.sf.jniinchi;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_BOND_STEREO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class INCHI_BOND_STEREO_ESTest extends INCHI_BOND_STEREO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      INCHI_BOND_STEREO[] iNCHI_BOND_STEREOArray0 = INCHI_BOND_STEREO.values();
      assertEquals(8, iNCHI_BOND_STEREOArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.valueOf("NONE");
      assertEquals(0, iNCHI_BOND_STEREO0.getIndx());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.valueOf("DOUBLE_EITHER");
      assertEquals(3, iNCHI_BOND_STEREO0.getIndx());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.valueOf("SINGLE_2UP");
      assertEquals((-1), iNCHI_BOND_STEREO0.getIndx());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      INCHI_BOND_STEREO.getValue((-388));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue(6);
      assertEquals(INCHI_BOND_STEREO.SINGLE_1DOWN, iNCHI_BOND_STEREO0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      INCHI_BOND_STEREO.getValue(5);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue(4);
      assertEquals(INCHI_BOND_STEREO.SINGLE_1EITHER, iNCHI_BOND_STEREO0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue(3);
      int int0 = iNCHI_BOND_STEREO0.getIndx();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      INCHI_BOND_STEREO.getValue(2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue(1);
      assertEquals(INCHI_BOND_STEREO.SINGLE_1UP, iNCHI_BOND_STEREO0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue(0);
      int int0 = iNCHI_BOND_STEREO0.getIndx();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      INCHI_BOND_STEREO.getValue((-2));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      INCHI_BOND_STEREO.getValue((-3));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue((-4));
      assertEquals(INCHI_BOND_STEREO.SINGLE_2EITHER, iNCHI_BOND_STEREO0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      INCHI_BOND_STEREO.getValue((-5));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue((-6));
      assertEquals(INCHI_BOND_STEREO.SINGLE_2DOWN, iNCHI_BOND_STEREO0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.getValue((-1));
      int int0 = iNCHI_BOND_STEREO0.getIndx();
      assertEquals((-1), int0);
  }
}
