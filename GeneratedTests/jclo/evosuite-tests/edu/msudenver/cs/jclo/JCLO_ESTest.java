/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 24 20:26:52 GMT 2020
 */

package edu.msudenver.cs.jclo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.msudenver.cs.jclo.JCLO;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JCLO_ESTest extends JCLO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[8];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("version.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "eF-m7_p7yP");
      JCLO.main(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JCLO jCLO0 = new JCLO("");
      // Undeclared exception!
      try { 
        jCLO0.parse((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[8];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("version.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "%Ej(y?ofI+k$icq");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JCLO.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[][] stringArray0 = new String[5][7];
      JCLO jCLO0 = null;
      try {
        jCLO0 = new JCLO("Q>l4{A$ZKy&j`]", (Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JCLO jCLO0 = null;
      try {
        jCLO0 = new JCLO((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JCLO jCLO0 = null;
      try {
        jCLO0 = new JCLO((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JCLO jCLO0 = new JCLO("W]jU,z;)hZI$Zhs", "W]jU,z;)hZI$Zhs");
      String string0 = jCLO0.usage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[][] stringArray0 = new String[19][7];
      String[] stringArray1 = new String[0];
      JCLO jCLO0 = new JCLO((Object) "", stringArray0);
      jCLO0.parse(stringArray1);
      assertEquals(0, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JCLO jCLO0 = new JCLO("zyVVXm/uHJ<\"", "zyVVXm/uHJ<\"");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-";
      // Undeclared exception!
      try { 
        jCLO0.parse(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such option: \"\"
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JCLO jCLO0 = new JCLO("", "");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-hash int\n";
      // Undeclared exception!
      try { 
        jCLO0.parse(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such option: \"ash int
         // \"
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[][] stringArray0 = new String[7][3];
      JCLO jCLO0 = new JCLO("", "", stringArray0);
      String string0 = jCLO0.usage();
      assertEquals("-hash int\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JCLO jCLO0 = new JCLO((String) null, "");
      String string0 = jCLO0.usage();
      assertEquals("-hash int\n", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[][] stringArray0 = new String[6][4];
      JCLO jCLO0 = new JCLO("", fileSystemHandling0, stringArray0);
      String string0 = jCLO0.toString();
      assertEquals("boolean: $assertionsDisabled = true", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JCLO jCLO0 = new JCLO("value", "java.lang.");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "value";
      jCLO0.parse(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JCLO jCLO0 = new JCLO((String) null, "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      jCLO0.parse(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      JCLO jCLO0 = new JCLO(object0);
      String string0 = jCLO0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try { 
        JCLO.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JCLO jCLO0 = null;
      try {
        jCLO0 = new JCLO((Object) null, (String[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JCLO jCLO0 = new JCLO("value", "java.lang.");
      // Undeclared exception!
      try { 
        jCLO0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [C cannot be cast to [Ljava.lang.Object;
         //
         verifyException("edu.msudenver.cs.jclo.JCLO", e);
      }
  }
}
